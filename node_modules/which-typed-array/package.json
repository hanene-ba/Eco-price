{
  "_args": [
    [
      {
        "raw": "which-typed-array@^1.1.2",
        "scope": null,
        "escapedName": "which-typed-array",
        "name": "which-typed-array",
        "rawSpec": "^1.1.2",
        "spec": ">=1.1.2 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Hanene\\.idlerc\\Desktop\\Eco-price\\node_modules\\util"
    ]
  ],
  "_from": "which-typed-array@^1.1.2",
  "_hasShrinkwrap": false,
  "_id": "which-typed-array@1.1.2",
  "_location": "/which-typed-array",
  "_nodeVersion": "13.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/which-typed-array_1.1.2_1586322302964_0.41407769495463453"
  },
  "_npmUser": {
    "name": "ljharb",
    "email": "ljharb@gmail.com"
  },
  "_npmVersion": "6.14.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "which-typed-array@^1.1.2",
    "scope": null,
    "escapedName": "which-typed-array",
    "name": "which-typed-array",
    "rawSpec": "^1.1.2",
    "spec": ">=1.1.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/util"
  ],
  "_resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.2.tgz",
  "_shasum": "e5f98e56bda93e3dac196b01d47c1156679c00b2",
  "_shrinkwrap": null,
  "_spec": "which-typed-array@^1.1.2",
  "_where": "C:\\Users\\Hanene\\.idlerc\\Desktop\\Eco-price\\node_modules\\util",
  "author": {
    "name": "Jordan Harband",
    "email": "ljharb@gmail.com",
    "url": "http://ljharb.codes"
  },
  "auto-changelog": {
    "output": "CHANGELOG.md",
    "template": "keepachangelog",
    "unreleased": false,
    "commitLimit": false,
    "backfillLimit": false
  },
  "bugs": {
    "url": "https://github.com/inspect-js/which-typed-array/issues"
  },
  "contributors": [
    {
      "name": "Jordan Harband",
      "email": "ljharb@gmail.com",
      "url": "http://ljharb.codes"
    }
  ],
  "dependencies": {
    "available-typed-arrays": "^1.0.2",
    "es-abstract": "^1.17.5",
    "foreach": "^2.0.5",
    "function-bind": "^1.1.1",
    "has-symbols": "^1.0.1",
    "is-typed-array": "^1.1.3"
  },
  "description": "Which kind of Typed Array is this JavaScript value? Works cross-realm, without `instanceof`, and despite Symbol.toStringTag.",
  "devDependencies": {
    "@ljharb/eslint-config": "^16.0.0",
    "auto-changelog": "^1.16.4",
    "covert": "^1.1.1",
    "eslint": "^6.8.0",
    "is-callable": "^1.1.5",
    "make-arrow-function": "^1.2.0",
    "make-generator-function": "^2.0.0",
    "safe-publish-latest": "^1.1.4",
    "tape": "^5.0.0-next.5"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-KT6okrd1tE6JdZAy3o2VhMoYPh3+J6EMZLyrxBQsZflI1QCZIxMrIYLkosd8Twf+YfknVIHmYQPgJt238p8dnQ==",
    "shasum": "e5f98e56bda93e3dac196b01d47c1156679c00b2",
    "tarball": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.2.tgz",
    "fileCount": 11,
    "unpackedSize": 25274,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJejVt/CRA9TVsSAnZWagAAQCYP/RujrpjMtzAg0g/eFLew\n25+jxt7aDe0/s6wBeSJ0POLPac1RT7L/ixgVLHw3nxq4Axk2aRIubQe1uN4r\nN+ASWycP/yvpwh1CYQkUpPm3+jjUPsd7z18Id6lvifIFUf++aJ117WbraQrS\nwMUqkaNXaN0FN85o8fmh/jpB6NTScAPhxU9VoPd80ql5ip7NAxsxPQ83/S4A\nXjogW9lNS6f6V6NvE9+WuX1/hYDNTk6WShwARC7cr34Y7fiVGvO8S9K6mI+o\nDz2OxbTWmwVC1KVzPacRNLne8j5FUcU8/OVr/Eu3NswcQsOdFwpy4pWVMxHb\n1olamJD0MmNcyVIiqP6ByZttK4QyP45rX2SUvdde9XWB0TCJd0MOIxrz+aqV\nZqzQ3kphQFzry8Ez0GRovv6lQVOClNJ+eKkhdTY8fI5FwUgu/Gcz6r4kWVY/\n20qJG0Ymogc1s081Oz3KqscNh9EQZPkbK5IKmF6weazOtU+0ygDtj4IbfSXO\nkzWoR3RQwtFQAEbl+XBMyxxYqTVzHaboyWSqj2phlmgoS7hG8nju0vH8wfLg\nNmvzHW2o2ctCnGpNz0kpoxjIrLse6EX/UjPNiCUrO5TAXAdmilwFUrEIILLX\nQwCoSWoywU6+Ctrxt0pqQHxlXmCwDGyZsGr/H32njNnr5SKn8TwR5mb2io9l\n2D1r\r\n=IdX/\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 0.4"
  },
  "funding": {
    "url": "https://github.com/sponsors/ljharb"
  },
  "gitHead": "3b299771c6de392c2ea7a0a275865a5cf0f5ff50",
  "homepage": "https://github.com/inspect-js/which-typed-array#readme",
  "keywords": [
    "array",
    "TypedArray",
    "typed array",
    "which",
    "typed",
    "Int8Array",
    "Uint8Array",
    "Uint8ClampedArray",
    "Int16Array",
    "Uint16Array",
    "Int32Array",
    "Uint32Array",
    "Float32Array",
    "Float64Array",
    "ES6",
    "toStringTag",
    "Symbol.toStringTag",
    "@@toStringTag"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ljharb",
      "email": "ljharb@gmail.com"
    }
  ],
  "name": "which-typed-array",
  "optionalDependencies": {},
  "readme": "# which-typed-array <sup>[![Version Badge][2]][1]</sup>\n\n[![Build Status][3]][4]\n[![dependency status][5]][6]\n[![dev dependency status][7]][8]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][11]][1]\n\nWhich kind of Typed Array is this JavaScript value? Works cross-realm, without `instanceof`, and despite Symbol.toStringTag.\n\n## Example\n\n```js\nvar whichTypedArray = require('which-typed-array');\nvar assert = require('assert');\n\nassert.equal(false, whichTypedArray(undefined));\nassert.equal(false, whichTypedArray(null));\nassert.equal(false, whichTypedArray(false));\nassert.equal(false, whichTypedArray(true));\nassert.equal(false, whichTypedArray([]));\nassert.equal(false, whichTypedArray({}));\nassert.equal(false, whichTypedArray(/a/g));\nassert.equal(false, whichTypedArray(new RegExp('a', 'g')));\nassert.equal(false, whichTypedArray(new Date()));\nassert.equal(false, whichTypedArray(42));\nassert.equal(false, whichTypedArray(NaN));\nassert.equal(false, whichTypedArray(Infinity));\nassert.equal(false, whichTypedArray(new Number(42)));\nassert.equal(false, whichTypedArray('foo'));\nassert.equal(false, whichTypedArray(Object('foo')));\nassert.equal(false, whichTypedArray(function () {}));\nassert.equal(false, whichTypedArray(function* () {}));\nassert.equal(false, whichTypedArray(x => x * x));\nassert.equal(false, whichTypedArray([]));\n\nassert.equal('Int8Array', whichTypedArray(new Int8Array()));\nassert.equal('Uint8Array', whichTypedArray(new Uint8Array()));\nassert.equal('Uint8ClampedArray', whichTypedArray(new Uint8ClampedArray()));\nassert.equal('Int16Array', whichTypedArray(new Int16Array()));\nassert.equal('Uint16Array', whichTypedArray(new Uint16Array()));\nassert.equal('Int32Array', whichTypedArray(new Int32Array()));\nassert.equal('Uint32Array', whichTypedArray(new Uint32Array()));\nassert.equal('Float32Array', whichTypedArray(new Float32Array()));\nassert.equal('Float64Array', whichTypedArray(new Float64Array()));\nassert.equal('BigInt64Array', whichTypedArray(new BigInt64Array()));\nassert.equal('BigUint64Array', whichTypedArray(new BigUint64Array()));\n```\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n[1]: https://npmjs.org/package/which-typed-array\n[2]: http://versionbadg.es/inspect-js/which-typed-array.svg\n[3]: https://travis-ci.org/inspect-js/which-typed-array.svg\n[4]: https://travis-ci.org/inspect-js/which-typed-array\n[5]: https://david-dm.org/inspect-js/which-typed-array.svg\n[6]: https://david-dm.org/inspect-js/which-typed-array\n[7]: https://david-dm.org/inspect-js/which-typed-array/dev-status.svg\n[8]: https://david-dm.org/inspect-js/which-typed-array#info=devDependencies\n[11]: https://nodei.co/npm/which-typed-array.png?downloads=true&stars=true\n[license-image]: http://img.shields.io/npm/l/which-typed-array.svg\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/which-typed-array.svg\n[downloads-url]: http://npm-stat.com/charts.html?package=which-typed-array\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/inspect-js/which-typed-array.git"
  },
  "scripts": {
    "coverage": "covert test/index.js",
    "lint": "eslint .",
    "posttest": "npx aud --production",
    "postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\"",
    "prepublish": "safe-publish-latest",
    "pretest": "npm run --silent lint",
    "test": "npm run tests-only",
    "tests-only": "node --es-staging test",
    "version": "auto-changelog && git add CHANGELOG.md"
  },
  "testling": {
    "files": "test/index.js",
    "browsers": [
      "iexplore/6.0..latest",
      "firefox/3.0..6.0",
      "firefox/15.0..latest",
      "firefox/nightly",
      "chrome/4.0..10.0",
      "chrome/20.0..latest",
      "chrome/canary",
      "opera/10.0..latest",
      "opera/next",
      "safari/4.0..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2"
    ]
  },
  "version": "1.1.2"
}
